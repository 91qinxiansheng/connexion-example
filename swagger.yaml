swagger: '2.0'
info:
  title: Example
  version: "0.1"
consumes:
  - application/json
produces:
  - application/json
paths:
  /pets:
    get:
      tags: [Pets]
      operationId: app.get_pets
      summary: Get all pets
      responses:
        200:
          description: Return pets
          schema:
            type: array
            items:
              $ref: '#/definitions/Pet'
  /pets/{pet_id}:
    get:
      tags: [Pets]
      operationId: app.get_pet
      summary: Get a single pet
      parameters:
        - name: pet_id
          in: path
          type: string
          required: true
      responses:
        200:
          description: Return pet
          schema:
            type: array
            items:
              $ref: '#/definitions/Pet'
  /pets/{pet_id}:
    put:
      tags: [Pets]
      operationId: app.put_pet
      summary: Add a single item to the cart
      parameters:
        - name: pet_id
          in: path
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Pet'
      responses:
        200:
          description: item updated
        201:
          description: new item created
    delete:
      tags: [Pets]
      operationId: app.delete_pet
      summary: Remove a pet
      parameters:
        - name: pet_id
          in: path
          type: string
          required: true
      responses:
        204:
          description: item was deleted
        404:
          description: item did not exist


definitions:
  Pet:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: Unique identifier
        example: "123"
        readOnly: true
      name:
        type: string
        description: Retailer ID
        example: "foo"
        readOnly: true
      tags:
        type: object
        description: custom tags
      created:
        type: string
        format: date-time
        example: "2015-07-07T15:49:51.230+02:00"
        readOnly: true

